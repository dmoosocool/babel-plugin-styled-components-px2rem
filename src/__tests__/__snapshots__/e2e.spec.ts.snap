// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`e2e should transform runtime 1`] = `
"import styled, { css, createGlobalStyle, keyframes } from 'styled-components';
const mixins = css\`
  padding: 0 0.16rem;
  margin: 0.16rem 0.32rem 0.16rem 0.32rem;
\`;
const Animation = keyframes\`
  from {
    transform: translateX(1rem);
  }

  to {
    transform: translateX(-1rem);
  }
\`;
const Input = styled.input.attrs(props => ({
  type: 'password',
  size: props.size || '1em',
  width: props.width || 100
}))\`
  color: palevioletred;
  font-size: 0.14rem;
  border: 1px solid palevioletred;
  border-radius: 0.08rem;
  width: \${props => _px2rem(props.width)};
  padding: \${props => props.size};
\`;
const fontSize = 18;
const GlobalStyle = createGlobalStyle\`
  html body {
    font-size: \${_px2rem(fontSize)};
  }
\`;

function getHeight() {
  const height = 100;
  return height + window.screen.availHeight / 2;
}

const BlockButton = styled.button\`
  \${mixins};
  display: block;
  width: 100%;
  height: \${_px2rem(getHeight())};
  line-height: 0.96rem;
\`;
const lineHeight = '44';
const InlineButton = styled.button\`
  display: inline;
  width: \${props => _px2rem(() => {
  if (props.width) {
    return props.width;
  } else {
    return 0;
  }
})};
  height: \${_px2rem(props.height)};
  line-height: \${_px2rem(lineHeight)};
\`;
const ExtendedButton = styled(InlineButton)\`
  width: 1.2rem;
  height: 0.32rem;
  line-height: 0.32rem;
  font-size: 0.14rem;
\`;
const SizeableButton = styled.button(props => \`
  display: inline;
  width: \${_px2rem(props.width)};
  height: \${props.height};
  font-size: 0.16rem;
\`);

function _px2rem(input) {
  if (typeof input === 'function') return _px2rem(input());
  var value = typeof input === 'string' ? parseFloat(input) : typeof input === 'number' ? input : 0;
  var pixels = Number.isNaN(value) ? 0 : value;

  if (pixels < 2) {
    return \`\${pixels}px\`;
  }

  var mul = Math.pow(10, 5 + 1);
  return \`\${Math.round(Math.floor(pixels * 1 / 100 * mul) / 10) * 10 / mul}rem\`;
}"
`;

exports[`e2e should work 1`] = `
"import styled, { css, createGlobalStyle, keyframes } from 'styled-components';
const mixins = css\`
  padding: 0 0.16rem;
  margin: 0.16rem 0.32rem 0.16rem 0.32rem;
\`;
const Animation = keyframes\`
  from {
    transform: translateX(1rem);
  }

  to {
    transform: translateX(-1rem);
  }
\`;
const Input = styled.input.attrs(props => ({
  type: 'password',
  size: props.size || '1em',
  width: props.width || 100
}))\`
  color: palevioletred;
  font-size: 0.14rem;
  border: 1px solid palevioletred;
  border-radius: 0.08rem;
  width: \${props => props.width}px;
  padding: \${props => props.size};
\`;
const fontSize = 18;
const GlobalStyle = createGlobalStyle\`
  html body {
    font-size: \${fontSize}px;
  }
\`;

function getHeight() {
  const height = 100;
  return height + window.screen.availHeight / 2;
}

const BlockButton = styled.button\`
  \${mixins};
  display: block;
  width: 100%;
  height: \${getHeight()}px;
  line-height: 0.96rem;
\`;
const lineHeight = '44';
const InlineButton = styled.button\`
  display: inline;
  width: \${props => {
  if (props.width) {
    return props.width;
  } else {
    return 0;
  }
}}px;
  height: \${props.height}px;
  line-height: \${lineHeight}px;
\`;
const ExtendedButton = styled(InlineButton)\`
  width: 1.2rem;
  height: 0.32rem;
  line-height: 0.32rem;
  font-size: 0.14rem;
\`;
const SizeableButton = styled.button(props => \`
  display: inline;
  width: \${props.width}px;
  height: \${props.height};
  font-size: 0.16rem;
\`);"
`;
